{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"19HQwH6eKPFgIgqlOIRdcH30c9E8sJzDA","timestamp":1759304317542}],"authorship_tag":"ABX9TyMDAFuXmxwtlyAZCT7XaoKA"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"mMlLJJSE5FZd"},"outputs":[],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["## I Try first when creating the notebook\n","\n","%cd /content/drive/MyDrive/repos\n","import os\n","repo_path = \"/content/drive/MyDrive/repos/Epilepsy_Microglia\"\n","if not os.path.exists(repo_path):\n","    !git clone https://github.com/Unsogoodday/Epilepsy_Microglia.git {repo_path}\n","%cd {repo_path}"],"metadata":{"id":"hPRKll2YsZI4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["## remote check\n","%cd /content/drive/MyDrive/repos/Epilepsy_Microglia\n","!git remote -v"],"metadata":{"id":"Ju6QpNqUnIeL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["## If there is no origin/fetch, run this\n","!git remote add origin \"https://github.com/Unsogoodday/Epilepsy_Microglia.git\"\n","!git push -u origin main"],"metadata":{"id":"XDTV2lAin6j1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["## II config\n","%cd /content/drive/MyDrive/repos/Epilepsy_Microglia\n","!git config user.email \"242shizume@gmail.com\"\n","!git config user.name \"Unsogoodday\""],"metadata":{"id":"WoXM3baasCSg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["## III Save to github\n","\n","%cd /content/drive/MyDrive/repos/Epilepsy_Microglia\n","!git pull origin main --allow-unrelated-histories\n","!git add .\n","!git commit -m \"Create 2. preprocess\""],"metadata":{"id":"DQ1Nx7uSskuV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!git push origin main"],"metadata":{"id":"a_v5nYe2x3AI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 1. install packages\n","!git pull origin main --allow-unrelated-histories\n","%cd /content/drive/MyDrive/repos/Epilepsy_Microglia\n","%pip install -q -r requirements.txt"],"metadata":{"id":"JYXjxwn1tE0n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[" #2. Import Packages\n","\n","import torch\n","\n","# Single Cell Libraries\n","import scvi\n","import scanpy as sc\n","import anndata as ad\n","\n","# Data Processing and Plotting\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import igraph\n","import leidenalg\n","\n","# File grab\n","import os\n","import tempfile\n","import pooch\n","import shutil, subprocess, glob\n","import gzip\n","\n","print(torch.__version__)\n","print(scvi.__version__)\n","print(torch.cuda.is_available())"],"metadata":{"id":"NAYlADIBtNYY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**2. Preprocess**\n","\n","0. Check var_names, make names unique\n","1. QC\n"],"metadata":{"id":"5F8jyRwn7ZpG"}},{"cell_type":"code","source":["KUMAR = \"/content/drive/MyDrive/datas/epilepsy_microglia/raw/GSE201048_raw/kumar_GSE201048_raw.h5ad\"\n","adata = sc.read_h5ad(KUMAR)\n","adata"],"metadata":{"id":"zghsYj6z2nnP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tempdir = \"/content/plots/\"\n","os.makedirs(tempdir, exist_ok=True)"],"metadata":{"id":"PIn96eBi5vS7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 0-1. Check var names (ensemble vs symbol)\n","print(adata.obs_names[:10])"],"metadata":{"id":"uhuco3_M3XcU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 0-2. make names unique\n","adata.var_names_make_unique()\n","adata"],"metadata":{"id":"k4FdfOPH3ul0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 1-1. QC\n","adata.var[\"mt\"] = adata.var_names.str.startswith(\"MT-\")\n","adata.var[\"ribo\"] = adata.var_names.str.startswith((\"RPS\", \"RPL\"))\n","adata.var[\"hb\"] = adata.var_names.str.contains(\"^HB[^(P)]\")\n","sc.pp.calculate_qc_metrics(adata, qc_vars=[\"mt\", \"ribo\", \"hb\"], inplace=True, log1p=True)\n","\n","sc.pl.violin(\n","    adata,\n","    [\"n_genes_by_counts\", \"total_counts\", \"pct_counts_mt\"],\n","    jitter = 0.4,\n","    multi_panel=True,\n","    save = \"qc.png\"\n",")\n","sc.pl.scatter(\n","    adata, \"total_counts\", \"n_genes_by_counts\", color=\"pct_counts_mt\",\n","    save = \"qc.png\"\n",")\n"],"metadata":{"id":"zXBnYgHx3k9d"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 1-2.\n","sc.pp.filter_cells(adata, min_genes=100)\n","sc.pp.filter_genes(adata, min_cells=3)\n","\n","adata.layers[\"counts\"] = adata.X.copy()\n","\n","sc.pp.normalize_total(adata, target_sum=1e4)\n","sc.pp.log1p(adata)\n","adata.raw = adata\n","\n","sc.pp.highly_variable_genes(\n","    adata,\n","    n_top_genes=1200,\n","    subset=True,\n","    layer=\"counts\",\n","    flavor=\"seurat_v3\",\n",")\n","\n","adata"],"metadata":{"id":"YWIJ29ay8ryS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"dfJNiuVF9CWx"},"execution_count":null,"outputs":[]}]}